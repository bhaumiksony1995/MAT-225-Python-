{"type":"settings","kernel":"python2","backend_state":"running","trust":true,"kernel_usage":{"cpu":0,"memory":77754368},"kernel_state":"idle"}
{"type":"file","last_load":1505916588812}
{"output":{"0":{"text":"Original Message:  DiscreteMathematicsIsFunx\nEncoded message:  IRUXGY3SMV2GKTLBORUGK3LBORUWG42JONDHK3TY\nDecoded message check:  DiscreteMathematicsIsFunx\n\nOriginal Message:  bettabordabowiebaddybevel\nEncoded message:  MJSXI5DBMJXXEZDBMJXXO2LFMJQWIZDZMJSXMZLM\nDecoded message check:  bettabordabowiebaddybevel\n","name":"stdout"}},"exec_count":4,"start":1507126218492,"input":"#make sure length of word is divisible by 5\n#convert message to ascii\n#convert message to binary\n#break it up into groups of 5\n#convert to letters 0-25 = A-Z , 26-31 = 2-7\n\ndef convertASCII(message): #converst message to ascii\n    converted = map(ord,message)\n    return(converted)\n\ndef convertBinary(ASCIImessage): #converts ascii message to binary\n    ans=format(ASCIImessage,'b').zfill(8)\n    return(ans)\n\ndef breakEmUp(BinaryMessage): #remakes list\n    myList = []\n    myString = \"\"\n    for i in range(25):\n        myList.append(BinaryMessage[i])\n    listString = ''.join(str(e) for e in myList)\n    return(listString)\n\ndef split(longstring): #splits up string into 5 bits\n    shortList = []\n    n = 5\n    shortList = [longstring[i:i+n] for i in range(0, len(longstring), n)]\n    return shortList\n\ndef convertInt(splitList): #converts binary to int\n    convertedList = []\n    for i in range(len(splitList)):\n        convertedList.append(int(splitList[i], 2))\n        #print convertedList\n    return convertedList\n\ndef INTtoLET(intList): #converts int to letters\n    endString = \"\"\n    alpha={i:chr(65+i) for i in range(26)}\n    alpha.update({26:'2',27:'3',28:'4',29:'5',30:'6',31:'7'})\n    def text(t):\n        return (alpha[t])\n    for i in range(len(intList)):\n        endString = endString + (text(intList[i]))\n    print \"Encoded message: \" , endString\n\nmessage = \"DiscreteMathematicsIsFunx\"\nprint \"Original Message: \", message\nASCIImessage = convertASCII(message)\nBinarymessage = map(convertBinary,ASCIImessage)\nlongstring = breakEmUp(Binarymessage)\nsplitList = []\nsplitList = split(longstring)\nintList = []\nintList = convertInt(splitList)\nINTtoLET(intList)\n\nimport base64\nprint \"Decoded message check: \" , base64.b32decode(\"IRUXGY3SMV2GKTLBORUGK3LBORUWG42JONDHK3TY\")\n\nprint \"\"\n\nMYmessage = \"bettabordabowiebaddybevel\"\nprint \"Original Message: \", MYmessage\nmyASCIImessage = convertASCII(MYmessage)\nmyBinarymessage = map(convertBinary,myASCIImessage)\nmylongstring = breakEmUp(myBinarymessage)\nmysplitList = []\nmysplitList = split(mylongstring)\nmyintList = []\nmyintList = convertInt(mysplitList)\nINTtoLET(myintList)\n\nimport base64\nprint \"Decoded message check: \" , base64.b32decode(\"MJSXI5DBMJXXEZDBMJXXO2LFMJQWIZDZMJSXMZLM\")","scrolled":true,"state":"done","pos":0,"type":"cell","end":1507126218511,"id":"efedf0","kernel":"python2"}
{"type":"cell","id":"0e1fa8","pos":1,"input":""}