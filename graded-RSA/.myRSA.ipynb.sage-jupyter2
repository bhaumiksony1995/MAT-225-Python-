{"type":"settings","kernel":"anaconda3","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.4"}},"kernel_usage":{"cpu":0,"memory":85774336},"kernel_state":"idle"}
{"exec_count":4,"start":1512232854978,"input":"def IntegerToDigraph(Decoded): #Converts integer M into integers a,b and returns list of digraphs\n    myList=[]\n    for i in range(len(Decoded)):\n        a = Decoded[i] // 100\n        b = Decoded[i] % 100\n        myList.append(a)\n        myList.append(b)\n    return myList","state":"done","pos":3,"cell_type":"code","type":"cell","end":1512232854983,"id":"6e17c3","kernel":"anaconda3"}
{"exec_count":3,"start":1512232854475,"input":"def DigraphToInteger(mylist): #Converts list of digraphs to one integer\n    a = mylist[0]\n    b = mylist[1]\n    m = a * 100 + b\n    return m","state":"done","pos":2,"cell_type":"code","type":"cell","end":1512232854478,"id":"c2cd28","kernel":"anaconda3"}
{"type":"file","last_load":1512058948436}
{"exec_count":7,"input":"\n<h3><font color='#FF0000'>_Grading Comment:_ Encoded message to me is not decoding properly using my private key.  Also, need to decode the message I emailed out and show some test encode/decode messages.<br><br> -25 </font></h3>\n    ","state":"done","pos":6,"cell_type":"markdown","type":"cell","id":"d583d1","kernel":"anaconda3"}
{"exec_count":1,"start":1512232853474,"input":"def StringToInteger(x):\n   return(ord(x)-97)","state":"done","pos":0,"cell_type":"code","type":"cell","end":1512232853476,"id":"8c30dd","kernel":"anaconda3"}
{"output":{"0":{"text":"The encoded message is:  [107180, 7770540, 1451496]\nThe decoded message is:  [7321619, 3057276, 5968301]\nThe decrypted message is:  ['\\U00011e61', 't', 'Áüç', '\\xad', '\\ue984', 'b']\n","name":"stdout"}},"exec_count":6,"start":1512232855975,"input":"message='Dennyx'\n#print (\"The message to be encrypted is : \", message)\nn =  9029507 #31 * 67\nd = 233\ne = 1049 #17\nconvertedString=list(map(StringToInteger,message))\ndigraphList = split(convertedString)\n\nmyList = []\nEncoded = []\nDecoded = []\nDecodedM = []\nfor i in range(len(digraphList)):\n    myList.append(DigraphToInteger(digraphList[i]))\n\nfor i in range(len(myList)):\n    Encoded.append((myList[i]**e) % n)\n\nfor i in range(len(Encoded)):\n    Decoded.append((Encoded[i]**d) % n)\n\nDecodedM.append((IntegerToDigraph(Decoded)))\n\nDecodedString=map(IntegerToString,DecodedM[0])\n\n#print (digraphList)\n#print (myList)\nprint (\"The encoded message is: \", Encoded)\nprint (\"The decoded message is: \", Decoded)\n#print (DecodedM)\nprint (\"The decrypted message is: \", list(DecodedString))","state":"done","pos":5,"cell_type":"code","type":"cell","end":1512232856015,"id":"5dc4cd","kernel":"anaconda3"}
{"exec_count":2,"start":1512232853975,"input":"def split(longstring): #splits up string into 2 bits\n    shortList = []\n    n = 2\n    shortList = [longstring[i:i+n] for i in range(0, len(longstring), n)]\n    return shortList","state":"done","pos":1,"cell_type":"code","type":"cell","end":1512232853977,"id":"d12c07","kernel":"anaconda3"}
{"exec_count":5,"start":1512232855473,"input":"def IntegerToString(x):\n   return(chr(x+97))","state":"done","pos":4,"cell_type":"code","type":"cell","end":1512232855476,"id":"a1c6bc","kernel":"anaconda3"}
{"type":"cell","id":"4dc5fd","pos":7,"input":""}